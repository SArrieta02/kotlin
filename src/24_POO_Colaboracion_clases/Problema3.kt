package `24_POO_Colaboracion_clases`

/*Problema 3
Objetivo:
Simular el encendido de un motor y el comportamiento de un carro que solo puede conducirse si el motor est√° encendido.
üîπ Clase Motor
Atributos:
encendido: Boolean ‚Üí indica si el motor est√° activo.
M√©todos:
encender()
Cambia el estado a true y muestra un mensaje.
apagar()
Cambia el estado a false y muestra un mensaje.
estado()
Muestra si el motor est√° encendido o apagado.

üîπ Clase Carro
Atributos:
motor: Motor ‚Üí instancia de la clase Motor.
M√©todos:
conducir()
Solo permite "conducir" si el motor est√° encendido.
Si est√° apagado, impide avanzar e imprime un mensaje.
estadoGeneral()
Muestra el estado actual del motor llamando al m√©todo estado().


üîπ L√≥gica de colaboraci√≥n:
El Carro depende del comportamiento del Motor, lo que demuestra una clara relaci√≥n de composici√≥n, donde una clase contiene y controla a otra.
*/

class Motor(var encendido: Boolean){
    fun encender(){
        encendido = true
        println("El motor se a encendido")
        println("Si puede conducir")
    }
    fun apagar(){
        encendido = false
        println("El motor esta apagado")
        println("No puede conducir")
        encender()
    }
    fun estado(){
        if (encendido == true){
            println("El estado del motor es encendido")
        }else{
            println("El estado del motor es apagado")
        }
    }
}
class Carro{
    val motor: Motor = Motor(false)

    fun conducir(){
        motor.apagar()
    }
    fun estadoGeneral(){
        motor.estado()
    }
}
fun main(){
    val carro = Carro()
    carro.conducir()
    carro.estadoGeneral()
}